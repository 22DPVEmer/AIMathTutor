// <auto-generated />
using System;
using MathTutor.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MathTutor.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MathTutor.Core.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ecc818c0-57ed-4758-8238-198be4b738d3",
                            CreatedAt = new DateTime(2025, 4, 16, 7, 49, 19, 123, DateTimeKind.Utc).AddTicks(1266),
                            Email = "admin@example.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            IsVerified = true,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAECeS7uDi/irvUSTHbpu6T1/nbhQWwaGGty1ZX2KySgXRLd9UlVYKeEK09kXwzb+KaA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4b07b718-2f36-461d-a5f1-19de35c14337",
                            TwoFactorEnabled = false,
                            UserName = "admin@example.com"
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fc1b43e6-3f18-4196-89c2-7f468f145ed8",
                            CreatedAt = new DateTime(2025, 4, 16, 7, 49, 19, 234, DateTimeKind.Utc).AddTicks(9851),
                            Email = "student@example.com",
                            EmailConfirmed = true,
                            FirstName = "Student",
                            IsVerified = true,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "STUDENT@EXAMPLE.COM",
                            NormalizedUserName = "STUDENT@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEOgga2w5fbnYFr8p9usG0yGfClrY2SDdeS2Osxb2wdq2E8QbFHicOxfu4eIwbqCqOQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b31dd042-1315-4642-9183-8ff678ebe846",
                            TwoFactorEnabled = false,
                            UserName = "student@example.com"
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8f5115ca-d68b-4b33-8dce-f9a520da5264",
                            CreatedAt = new DateTime(2025, 4, 16, 7, 49, 19, 316, DateTimeKind.Utc).AddTicks(5487),
                            Email = "teacher@example.com",
                            EmailConfirmed = true,
                            FirstName = "Teacher",
                            IsVerified = true,
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "TEACHER@EXAMPLE.COM",
                            NormalizedUserName = "TEACHER@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEIiFdNYAiZRMQ6uAQreEoZfQ7RJ9/HcQmPaN275gpQTyH+LOWCiw+IKkHgio9+hEnQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "066ec80b-469f-40c8-8606-85ee59688047",
                            TwoFactorEnabled = false,
                            UserName = "teacher@example.com"
                        });
                });

            modelBuilder.Entity("MathTutor.Core.Entities.MathCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MathCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Master algebraic expressions and equations",
                            Name = "Algebra"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Explore shapes and spatial relationships",
                            Name = "Geometry"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Learn about limits, derivatives, and integrals",
                            Name = "Calculus"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Understand data analysis and probability",
                            Name = "Statistics"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Study vectors and their applications in physics",
                            Name = "Vectors and Physics"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Learn combinatorics, probability and statistical analysis",
                            Name = "Probability and Statistics"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Study of triangles and trigonometric functions",
                            Name = "Trigonometry"
                        });
                });

            modelBuilder.Entity("MathTutor.Core.Entities.MathProblem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PointValue")
                        .HasColumnType("int");

                    b.Property<string>("Solution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("MathProblems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Difficulty = 1,
                            Explanation = "To solve this equation, subtract 3 from both sides: 2x = 8. Then divide both sides by 2: x = 4.",
                            PointValue = 1,
                            Solution = "x = 4",
                            Statement = "Solve for x: 2x + 3 = 11",
                            TopicId = 110
                        },
                        new
                        {
                            Id = 2,
                            Difficulty = 1,
                            Explanation = "Add 7 to both sides: 3y = 21. Then divide both sides by 3: y = 7.",
                            PointValue = 1,
                            Solution = "y = 7",
                            Statement = "Solve for y: 3y - 7 = 14",
                            TopicId = 110
                        },
                        new
                        {
                            Id = 3,
                            Difficulty = 2,
                            Explanation = "Subtract 2x from both sides: 3x - 8 = 13. Add 8 to both sides: 3x = 21. Divide both sides by 3: x = 7.",
                            PointValue = 2,
                            Solution = "x = 7",
                            Statement = "Solve for x: 5x - 8 = 2x + 13",
                            TopicId = 110
                        },
                        new
                        {
                            Id = 4,
                            Difficulty = 1,
                            Explanation = "This is a difference of squares: x² - 9 = (x+3)(x-3) = 0. Therefore x = 3 or x = -3.",
                            PointValue = 1,
                            Solution = "x = 3 or x = -3",
                            Statement = "Solve for x: x² - 9 = 0",
                            TopicId = 111
                        },
                        new
                        {
                            Id = 5,
                            Difficulty = 2,
                            Explanation = "This is a perfect square trinomial: x² + 6x + 9 = (x+3)² = 0. Therefore x = -3.",
                            PointValue = 2,
                            Solution = "x = -3",
                            Statement = "Solve for x: x² + 6x + 9 = 0",
                            TopicId = 111
                        },
                        new
                        {
                            Id = 6,
                            Difficulty = 3,
                            Explanation = "Use the quadratic formula: x = [-b ± √(b² - 4ac)]/2a with a=2, b=-5, c=-3. This gives x = 3 or x = -1/2.",
                            PointValue = 3,
                            Solution = "x = 3 or x = -1/2",
                            Statement = "Solve for x: 2x² - 5x - 3 = 0",
                            TopicId = 111
                        },
                        new
                        {
                            Id = 7,
                            Difficulty = 2,
                            Explanation = "Add the equations: 2x = 10, so x = 5. Substitute back: 5 + y = 7, so y = 2.",
                            PointValue = 2,
                            Solution = "x = 5, y = 2",
                            Statement = "Solve the system: x + y = 7, x - y = 3",
                            TopicId = 112
                        },
                        new
                        {
                            Id = 8,
                            Difficulty = 3,
                            Explanation = "Multiply the second equation by 3: 12x - 3y = 15. Add to first equation: 14x = 27, so x = 27/14 = 1.93. Substitute back to find y.",
                            PointValue = 3,
                            Solution = "x = 2, y = 2.67",
                            Statement = "Solve the system: 2x + 3y = 12, 4x - y = 5",
                            TopicId = 112
                        },
                        new
                        {
                            Id = 9,
                            Difficulty = 1,
                            Explanation = "Add 5 to both sides: 2x > 12. Divide both sides by 2: x > 6.",
                            PointValue = 1,
                            Solution = "x > 6",
                            Statement = "Solve for x: 2x - 5 > 7",
                            TopicId = 113
                        },
                        new
                        {
                            Id = 10,
                            Difficulty = 2,
                            Explanation = "Subtract 2 from both sides: -3x ≤ -9. Divide both sides by -3 (and reverse the inequality): x ≥ 3.",
                            PointValue = 2,
                            Solution = "x ≥ 3",
                            Statement = "Solve for x: -3x + 2 ≤ -7",
                            TopicId = 113
                        },
                        new
                        {
                            Id = 11,
                            Difficulty = 1,
                            Explanation = "Use the Pythagorean theorem: |v| = √(3² + 4²) = √(9 + 16) = √25 = 5.",
                            PointValue = 1,
                            Solution = "5",
                            Statement = "Find the magnitude of vector v = (3, 4).",
                            TopicId = 1
                        },
                        new
                        {
                            Id = 12,
                            Difficulty = 2,
                            Explanation = "First find |v| = √(6² + 8²) = √(36 + 64) = √100 = 10. Then v/|v| = (6/10, 8/10) = (0.6, 0.8).",
                            PointValue = 2,
                            Solution = "(0.6, 0.8)",
                            Statement = "Find the unit vector in the direction of v = (6, 8).",
                            TopicId = 2
                        },
                        new
                        {
                            Id = 13,
                            Difficulty = 1,
                            Explanation = "This is a permutation of 4 distinct objects, which is 4! = 4 × 3 × 2 × 1 = 24.",
                            PointValue = 1,
                            Solution = "24",
                            Statement = "How many ways can you arrange the letters in the word 'MATH'?",
                            TopicId = 20
                        },
                        new
                        {
                            Id = 14,
                            Difficulty = 2,
                            Explanation = "For the first position, we have 5 choices. For the second, 4 choices. For the third, 3 choices. Total: 5 × 4 × 3 = 60.",
                            PointValue = 2,
                            Solution = "60",
                            Statement = "How many 3-digit numbers can be formed using digits 1 to 5 if no repetition is allowed?",
                            TopicId = 23
                        },
                        new
                        {
                            Id = 15,
                            Difficulty = 1,
                            Explanation = "Add all values and divide by the number of items: (4 + 7 + 9 + 3 + 8 + 5) ÷ 6 = 36 ÷ 6 = 6.",
                            PointValue = 1,
                            Solution = "6",
                            Statement = "Find the mean of the data set: 4, 7, 9, 3, 8, 5.",
                            TopicId = 30
                        },
                        new
                        {
                            Id = 16,
                            Difficulty = 3,
                            Explanation = "First find the mean: (2 + 4 + 6 + 8 + 10) ÷ 5 = 30 ÷ 5 = 6. Then find the variance: [(2-6)² + (4-6)² + (6-6)² + (8-6)² + (10-6)²] ÷ 5 = [16 + 4 + 0 + 4 + 16] ÷ 5 = 40 ÷ 5 = 8. Standard deviation = √8 ≈ 2.83.",
                            PointValue = 3,
                            Solution = "3.16",
                            Statement = "Find the standard deviation of the data set: 2, 4, 6, 8, 10.",
                            TopicId = 31
                        },
                        new
                        {
                            Id = 17,
                            Difficulty = 2,
                            Explanation = "Factor the numerator: (x² - 4) ÷ (x - 2) = [(x - 2)(x + 2)] ÷ (x - 2) = x + 2.",
                            PointValue = 2,
                            Solution = "x + 2",
                            Statement = "Simplify: (x² - 4) ÷ (x - 2)",
                            TopicId = 40
                        },
                        new
                        {
                            Id = 18,
                            Difficulty = 3,
                            Explanation = "Cross multiply: x + 1 = 3(x - 2). Expand: x + 1 = 3x - 6. Subtract 3x from both sides: -2x + 1 = -6. Subtract 1 from both sides: -2x = -7. Divide by -2: x = 7/2.",
                            PointValue = 3,
                            Solution = "x = 7",
                            Statement = "Solve for x: (x + 1)/(x - 2) = 3",
                            TopicId = 49
                        },
                        new
                        {
                            Id = 19,
                            Difficulty = 1,
                            Explanation = "sin(30°) = 1/2 = 0.5",
                            PointValue = 1,
                            Solution = "0.5",
                            Statement = "Find the value of sin(30°).",
                            TopicId = 60
                        },
                        new
                        {
                            Id = 20,
                            Difficulty = 3,
                            Explanation = "When sin(x) = cos(x), then sin(x)/cos(x) = 1, so tan(x) = 1. This occurs when x = π/4 + nπ, where n is an integer.",
                            PointValue = 3,
                            Solution = "x = π/4 + nπ",
                            Statement = "Solve for x in the equation: sin(x) = cos(x).",
                            TopicId = 64
                        },
                        new
                        {
                            Id = 21,
                            Difficulty = 2,
                            Explanation = "(x^3)^2 = x^6, so x^6 × x^4 = x^10.",
                            PointValue = 2,
                            Solution = "x^10",
                            Statement = "Simplify: (x^3)^2 × x^4",
                            TopicId = 70
                        },
                        new
                        {
                            Id = 22,
                            Difficulty = 2,
                            Explanation = "∛(x^5) = (x^5)^(1/3) = x^(5/3).",
                            PointValue = 2,
                            Solution = "x^(5/3)",
                            Statement = "Convert to a single expression with a rational exponent: ∛(x^5)",
                            TopicId = 72
                        },
                        new
                        {
                            Id = 23,
                            Difficulty = 1,
                            Explanation = "We can rewrite 8 as 2^3. So, 2^x = 2^3, which means x = 3.",
                            PointValue = 1,
                            Solution = "x = 3",
                            Statement = "Solve for x: 2^x = 8",
                            TopicId = 80
                        },
                        new
                        {
                            Id = 24,
                            Difficulty = 2,
                            Explanation = "log₄(64) = log₄(4^3) = 3",
                            PointValue = 2,
                            Solution = "3",
                            Statement = "Simplify: log₄(64)",
                            TopicId = 82
                        },
                        new
                        {
                            Id = 25,
                            Difficulty = 2,
                            Explanation = "Use the 3D distance formula: d = √[(4-1)² + (6-2)² + (8-3)²] = √[9 + 16 + 25] = √50 ≈ 7.07.",
                            PointValue = 2,
                            Solution = "√50 ≈ 7.07",
                            Statement = "Find the distance between points (1, 2, 3) and (4, 6, 8).",
                            TopicId = 90
                        },
                        new
                        {
                            Id = 26,
                            Difficulty = 1,
                            Explanation = "Volume = length × width × height = 3 cm × 4 cm × 5 cm = 60 cm³.",
                            PointValue = 1,
                            Solution = "60 cm³",
                            Statement = "Find the volume of a rectangular prism with dimensions 3 cm × 4 cm × 5 cm.",
                            TopicId = 94
                        },
                        new
                        {
                            Id = 27,
                            Difficulty = 2,
                            Explanation = "Volume of a sphere = (4/3) × π × r³ = (4/3) × π × 3³ = (4/3) × π × 27 ≈ 113.1 cm³.",
                            PointValue = 2,
                            Solution = "113.1 cm³",
                            Statement = "Find the volume of a sphere with radius 3 cm.",
                            TopicId = 100
                        },
                        new
                        {
                            Id = 28,
                            Difficulty = 2,
                            Explanation = "Volume of a cone = (1/3) × π × r² × h = (1/3) × π × 4² × 9 = (1/3) × π × 16 × 9 = 48π ≈ 150.8 cm³.",
                            PointValue = 2,
                            Solution = "150.8 cm³",
                            Statement = "Find the volume of a cone with radius 4 cm and height 9 cm.",
                            TopicId = 102
                        },
                        new
                        {
                            Id = 29,
                            Difficulty = 2,
                            Explanation = "Subtract 4x from both sides: 3x - 2 = 10. Add 2 to both sides: 3x = 12. Divide by 3: x = 4.",
                            PointValue = 2,
                            Solution = "x = 4",
                            Statement = "Solve for x: 7x - 2 = 4x + 10",
                            TopicId = 110
                        },
                        new
                        {
                            Id = 30,
                            Difficulty = 2,
                            Explanation = "Factor the expression: x² - 7x + 12 = (x - 3)(x - 4) = 0. Therefore, x = 3 or x = 4.",
                            PointValue = 2,
                            Solution = "x = 3 or x = 4",
                            Statement = "Find the solutions to x² - 7x + 12 = 0.",
                            TopicId = 111
                        });
                });

            modelBuilder.Entity("MathTutor.Core.Entities.MathProblemAttempt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AttemptedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("PointsEarned")
                        .HasColumnType("int");

                    b.Property<int>("ProblemId")
                        .HasColumnType("int");

                    b.Property<string>("UserAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProblemId");

                    b.HasIndex("UserId");

                    b.ToTable("MathProblemAttempts");
                });

            modelBuilder.Entity("MathTutor.Core.Entities.MathTopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<int>("GradeLevel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentTopicId")
                        .HasColumnType("int");

                    b.Property<int>("TotalPointsPossible")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ParentTopicId");

                    b.ToTable("MathTopics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 5,
                            Description = "Study of vectors and their applications in motion",
                            Difficulty = 2,
                            GradeLevel = 8,
                            Name = "Vectors and Motion",
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 6,
                            Description = "Introduction to combinatorics and probability theory",
                            Difficulty = 2,
                            GradeLevel = 8,
                            Name = "Combinatorics and Probability I",
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 6,
                            Description = "Introduction to statistical concepts and data analysis",
                            Difficulty = 2,
                            GradeLevel = 5,
                            Name = "Statistics I",
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 1,
                            Description = "Study of fractional functions and algebraic expressions",
                            Difficulty = 2,
                            GradeLevel = 9,
                            Name = "Fractional Functions and Algebraic Fractions",
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 60,
                            CategoryId = 7,
                            Description = "Study of trigonometric functions and their properties",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Sine and Cosine Functions",
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 70,
                            CategoryId = 1,
                            Description = "Study of powers with rational exponents and geometric progressions",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Power with Rational Exponent, Geometric Progression",
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 80,
                            CategoryId = 1,
                            Description = "Study of exponential functions and their applications",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Exponential Function",
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 90,
                            CategoryId = 2,
                            Description = "Study of 3D geometry, lines, planes and polyhedra",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Lines and Planes in Space. Polyhedra",
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 100,
                            CategoryId = 2,
                            Description = "Study of bodies formed by rotation",
                            Difficulty = 2,
                            GradeLevel = 12,
                            Name = "Rotational Bodies",
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 5,
                            Description = "Understanding vectors, their magnitude and placement in space",
                            Difficulty = 2,
                            GradeLevel = 9,
                            Name = "Vector and its Magnitude. Vector Placement",
                            ParentTopicId = 1,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 5,
                            Description = "Laws governing the addition of vectors",
                            Difficulty = 2,
                            GradeLevel = 9,
                            Name = "Vector Addition Laws",
                            ParentTopicId = 1,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 5,
                            Description = "Different ways to represent vectors",
                            Difficulty = 2,
                            GradeLevel = 9,
                            Name = "Vector Representation",
                            ParentTopicId = 1,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Description = "Projecting vectors onto coordinate axes",
                            Difficulty = 2,
                            GradeLevel = 9,
                            Name = "Vector Projection on an Axis",
                            ParentTopicId = 1,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 5,
                            Description = "Calculating distance in vector spaces",
                            Difficulty = 2,
                            GradeLevel = 9,
                            Name = "Distance Between Two Points",
                            ParentTopicId = 1,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 5,
                            Description = "Working with vectors in 2D coordinate systems",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Vectors in Coordinate Form on a Plane",
                            ParentTopicId = 1,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 5,
                            Description = "Working with vectors in 3D space",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Vectors in Space",
                            ParentTopicId = 1,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            Description = "Equations of lines in vector form",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Line Equation",
                            ParentTopicId = 1,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            Description = "Understanding linear functions and increments",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Linear Function. Function and Argument Increment",
                            ParentTopicId = 1,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 5,
                            Description = "Different forms of line equations",
                            Difficulty = 2,
                            GradeLevel = 7,
                            Name = "Line Equation",
                            ParentTopicId = 1,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 5,
                            Description = "Properties of parallel and perpendicular lines",
                            Difficulty = 2,
                            GradeLevel = 8,
                            Name = "Parallel and Perpendicular Lines",
                            ParentTopicId = 1,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 5,
                            Description = "Working with equations in two variables and circle equations",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Equation with 2 Variables. Circle Equation",
                            ParentTopicId = 1,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 5,
                            Description = "Solving and graphing inequalities with two variables",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Inequality with 2 Variables",
                            ParentTopicId = 1,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 6,
                            Description = "Understanding sets and operations on sets",
                            Difficulty = 2,
                            GradeLevel = 9,
                            Name = "Sets. Operations with Sets",
                            ParentTopicId = 20,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 6,
                            Description = "Basic principles of combinatorics",
                            Difficulty = 2,
                            GradeLevel = 9,
                            Name = "Introduction to Combinatorics",
                            ParentTopicId = 20,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 6,
                            Description = "Counting principles, permutations and combinations",
                            Difficulty = 2,
                            GradeLevel = 9,
                            Name = "Combinatorics I",
                            ParentTopicId = 20,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 6,
                            Description = "Basic concepts of probability theory",
                            Difficulty = 2,
                            GradeLevel = 6,
                            Name = "Elements of Probability Theory",
                            ParentTopicId = 20,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 6,
                            Description = "Advanced probability concepts",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Sum Probability. Conditional Probability",
                            ParentTopicId = 20,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 6,
                            Description = "Understanding statistical populations, samples and central tendency",
                            Difficulty = 2,
                            GradeLevel = 9,
                            Name = "Population, Sample and Data. Mean Values",
                            ParentTopicId = 30,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 6,
                            Description = "Understanding variability in data and data visualization",
                            Difficulty = 2,
                            GradeLevel = 3,
                            Name = "Measures of Dispersion, Graphical Representation of Data",
                            ParentTopicId = 30,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 1,
                            Description = "Working with rational expressions in algebra",
                            Difficulty = 2,
                            GradeLevel = 9,
                            Name = "Rational Algebraic Expressions",
                            ParentTopicId = 40,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 1,
                            Description = "Solving various types of algebraic equations",
                            Difficulty = 2,
                            GradeLevel = 9,
                            Name = "Algebraic Equations",
                            ParentTopicId = 40,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 1,
                            Description = "Understanding algebraic fractions and their domains",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Algebraic Fractions. Domain of Definition",
                            ParentTopicId = 40,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = 1,
                            Description = "Techniques for simplifying and expanding algebraic fractions",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Simplification and Expansion of Algebraic Fractions",
                            ParentTopicId = 40,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = 1,
                            Description = "Understanding identities and sign changes in algebra",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Identity. Sign Change Rule",
                            ParentTopicId = 40,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = 1,
                            Description = "Operations with algebraic fractions",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Multiplication, Division, Exponentiation of Algebraic Fractions",
                            ParentTopicId = 40,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 47,
                            CategoryId = 1,
                            Description = "Techniques for adding and subtracting algebraic fractions",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Addition and Subtraction of Algebraic Fractions",
                            ParentTopicId = 40,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 48,
                            CategoryId = 1,
                            Description = "Understanding and working with fractional functions",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Fractional Function",
                            ParentTopicId = 40,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 49,
                            CategoryId = 1,
                            Description = "Solving equations and inequalities involving fractions",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Fractional Equations and Inequalities",
                            ParentTopicId = 40,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 50,
                            CategoryId = 1,
                            Description = "Methods for solving equations with fractions",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Fractional Equations",
                            ParentTopicId = 40,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 51,
                            CategoryId = 1,
                            Description = "Applying fractional equations to solve word problems",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Fractional Equations in Word Problems",
                            ParentTopicId = 40,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 52,
                            CategoryId = 1,
                            Description = "Revisiting methods for solving linear and quadratic inequalities",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Review of Linear and Quadratic Inequality Solving",
                            ParentTopicId = 40,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 53,
                            CategoryId = 1,
                            Description = "Solving inequalities with fractions using intervals",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Fractional Inequalities. Interval Method",
                            ParentTopicId = 40,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 61,
                            CategoryId = 7,
                            Description = "Reviewing trigonometric relationships in right triangles",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Relationships in a Right Triangle. Review",
                            ParentTopicId = 60,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 62,
                            CategoryId = 7,
                            Description = "Understanding sine and cosine for any angle",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Sine and Cosine of a Rotation Angle",
                            ParentTopicId = 60,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 63,
                            CategoryId = 7,
                            Description = "Applications of sine and cosine theorems in triangles",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Sine and Cosine Theorems",
                            ParentTopicId = 60,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 64,
                            CategoryId = 7,
                            Description = "Study of trigonometric functions and their key properties",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Trigonometric Functions and Their Properties",
                            ParentTopicId = 60,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 65,
                            CategoryId = 7,
                            Description = "Working with trigonometric expressions and solving equations",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Trigonometric Expressions and Equations",
                            ParentTopicId = 60,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 66,
                            CategoryId = 7,
                            Description = "Understanding fundamental trigonometric identities",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Trigonometric Expressions and Basic Identity",
                            ParentTopicId = 65,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 67,
                            CategoryId = 7,
                            Description = "Working with complex trigonometric formulas",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Sum of Arguments and Double Argument Formulas",
                            ParentTopicId = 65,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 68,
                            CategoryId = 7,
                            Description = "Solving fundamental trigonometric equations",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Basic Trigonometric Equations",
                            ParentTopicId = 65,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 69,
                            CategoryId = 7,
                            Description = "Advanced techniques for solving trigonometric equations",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Factorization and Substitution Method",
                            ParentTopicId = 65,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 71,
                            CategoryId = 1,
                            Description = "Understanding and calculating nth roots",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Nth Degree Root",
                            ParentTopicId = 70,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 72,
                            CategoryId = 1,
                            Description = "Working with powers that have rational exponents",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Power with Rational Exponent",
                            ParentTopicId = 70,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 73,
                            CategoryId = 1,
                            Description = "Understanding and working with numeric sequences",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Sequences",
                            ParentTopicId = 70,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 74,
                            CategoryId = 1,
                            Description = "Properties and applications of geometric progressions",
                            Difficulty = 2,
                            GradeLevel = 10,
                            Name = "Geometric Progression",
                            ParentTopicId = 70,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 81,
                            CategoryId = 1,
                            Description = "Understanding exponential functions and their graphs",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Exponential Function",
                            ParentTopicId = 80,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 82,
                            CategoryId = 1,
                            Description = "Understanding logarithms and their properties",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Logarithm of a Number",
                            ParentTopicId = 80,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 83,
                            CategoryId = 1,
                            Description = "Applications of exponential functions in real-world processes",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Exponential Processes",
                            ParentTopicId = 80,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 84,
                            CategoryId = 1,
                            Description = "Reviewing properties of powers",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Power Properties. Review",
                            ParentTopicId = 80,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 85,
                            CategoryId = 1,
                            Description = "Reviewing methods for solving basic equations",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Basic Equations. Review",
                            ParentTopicId = 80,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 86,
                            CategoryId = 1,
                            Description = "Techniques for solving exponential equations",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Exponential Equations",
                            ParentTopicId = 80,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 87,
                            CategoryId = 1,
                            Description = "Reviewing methods for solving basic inequalities",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Basic Inequalities. Review",
                            ParentTopicId = 80,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 88,
                            CategoryId = 1,
                            Description = "Techniques for solving exponential inequalities",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Exponential Inequalities",
                            ParentTopicId = 80,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 91,
                            CategoryId = 2,
                            Description = "Reviewing methods for solving right triangles",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Right Triangle Calculation. Review",
                            ParentTopicId = 90,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 92,
                            CategoryId = 2,
                            Description = "Understanding geometric relationships in 3D space",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Lines and Planes in Space",
                            ParentTopicId = 90,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 93,
                            CategoryId = 2,
                            Description = "Understanding polyhedron geometry and cross-sections",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Polyhedron Diagonals and Section with a Plane",
                            ParentTopicId = 90,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 94,
                            CategoryId = 2,
                            Description = "Calculating surface area and volume of prisms",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Prism Surface and Volume",
                            ParentTopicId = 90,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 95,
                            CategoryId = 2,
                            Description = "Properties and calculations for regular triangular pyramids",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Regular Triangular Pyramid",
                            ParentTopicId = 90,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 96,
                            CategoryId = 2,
                            Description = "Properties and calculations for regular quadrangular and hexagonal pyramids",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Regular Quadrangular and Hexagonal Pyramid",
                            ParentTopicId = 90,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 97,
                            CategoryId = 2,
                            Description = "Properties and calculations for irregular pyramids",
                            Difficulty = 2,
                            GradeLevel = 11,
                            Name = "Irregular Pyramid",
                            ParentTopicId = 90,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 101,
                            CategoryId = 2,
                            Description = "Properties and calculations for cylinders",
                            Difficulty = 2,
                            GradeLevel = 12,
                            Name = "Cylinder",
                            ParentTopicId = 100,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 102,
                            CategoryId = 2,
                            Description = "Properties and calculations for cones",
                            Difficulty = 2,
                            GradeLevel = 12,
                            Name = "Cone",
                            ParentTopicId = 100,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 103,
                            CategoryId = 2,
                            Description = "Properties and calculations for spheres",
                            Difficulty = 2,
                            GradeLevel = 12,
                            Name = "Sphere",
                            ParentTopicId = 100,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 104,
                            CategoryId = 2,
                            Description = "Working with geometric combinations of cylinders and prisms",
                            Difficulty = 2,
                            GradeLevel = 12,
                            Name = "Cylinder and Prism Geometric Combinations",
                            ParentTopicId = 100,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 105,
                            CategoryId = 2,
                            Description = "Working with geometric combinations of spheres and prisms",
                            Difficulty = 2,
                            GradeLevel = 12,
                            Name = "Sphere and Prism Geometric Combinations",
                            ParentTopicId = 100,
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 110,
                            CategoryId = 1,
                            Description = "Solve equations in the form ax + b = c",
                            Difficulty = 2,
                            GradeLevel = 7,
                            Name = "Linear Equations",
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 111,
                            CategoryId = 1,
                            Description = "Solve equations in the form ax² + bx + c = 0",
                            Difficulty = 2,
                            GradeLevel = 8,
                            Name = "Quadratic Equations",
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 112,
                            CategoryId = 1,
                            Description = "Solve multiple equations with multiple variables",
                            Difficulty = 2,
                            GradeLevel = 9,
                            Name = "Systems of Equations",
                            TotalPointsPossible = 0
                        },
                        new
                        {
                            Id = 113,
                            CategoryId = 1,
                            Description = "Solve and graph inequalities",
                            Difficulty = 2,
                            GradeLevel = 8,
                            Name = "Inequalities",
                            TotalPointsPossible = 0
                        });
                });

            modelBuilder.Entity("MathTutor.Core.Entities.StudentProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxPointsPossible")
                        .HasColumnType("int");

                    b.Property<int>("PercentageCompleted")
                        .HasColumnType("int");

                    b.Property<int>("PointsEarned")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("StudentProgress");
                });

            modelBuilder.Entity("MathTutor.Core.Entities.UserMathProblem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("Solution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TopicId")
                        .HasColumnType("int");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMathProblems");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            ConcurrencyStamp = "d60d521d-f91e-4a68-b8fe-465eed74d3a7",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            ConcurrencyStamp = "123613e8-47df-4d09-b3d7-acfa44c60954",
                            Name = "Student",
                            NormalizedName = "STUDENT"
                        },
                        new
                        {
                            Id = "3",
                            ConcurrencyStamp = "9aea0c15-02bd-4f60-91d7-44e12ad844ca",
                            Name = "Teacher",
                            NormalizedName = "TEACHER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "1",
                            RoleId = "1"
                        },
                        new
                        {
                            UserId = "2",
                            RoleId = "2"
                        },
                        new
                        {
                            UserId = "3",
                            RoleId = "3"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MathTutor.Core.Entities.MathProblem", b =>
                {
                    b.HasOne("MathTutor.Core.Entities.MathTopic", "Topic")
                        .WithMany("Problems")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("MathTutor.Core.Entities.MathProblemAttempt", b =>
                {
                    b.HasOne("MathTutor.Core.Entities.MathProblem", "Problem")
                        .WithMany("Attempts")
                        .HasForeignKey("ProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathTutor.Core.Entities.ApplicationUser", "User")
                        .WithMany("ProblemAttempts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Problem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MathTutor.Core.Entities.MathTopic", b =>
                {
                    b.HasOne("MathTutor.Core.Entities.MathCategory", "Category")
                        .WithMany("Topics")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathTutor.Core.Entities.MathTopic", "ParentTopic")
                        .WithMany("Subtopics")
                        .HasForeignKey("ParentTopicId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("ParentTopic");
                });

            modelBuilder.Entity("MathTutor.Core.Entities.StudentProgress", b =>
                {
                    b.HasOne("MathTutor.Core.Entities.MathTopic", "Topic")
                        .WithMany("StudentProgress")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathTutor.Core.Entities.ApplicationUser", "User")
                        .WithMany("Progress")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MathTutor.Core.Entities.UserMathProblem", b =>
                {
                    b.HasOne("MathTutor.Core.Entities.MathTopic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId");

                    b.HasOne("MathTutor.Core.Entities.ApplicationUser", "User")
                        .WithMany("UserMathProblems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MathTutor.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MathTutor.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MathTutor.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MathTutor.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MathTutor.Core.Entities.ApplicationUser", b =>
                {
                    b.Navigation("ProblemAttempts");

                    b.Navigation("Progress");

                    b.Navigation("UserMathProblems");
                });

            modelBuilder.Entity("MathTutor.Core.Entities.MathCategory", b =>
                {
                    b.Navigation("Topics");
                });

            modelBuilder.Entity("MathTutor.Core.Entities.MathProblem", b =>
                {
                    b.Navigation("Attempts");
                });

            modelBuilder.Entity("MathTutor.Core.Entities.MathTopic", b =>
                {
                    b.Navigation("Problems");

                    b.Navigation("StudentProgress");

                    b.Navigation("Subtopics");
                });
#pragma warning restore 612, 618
        }
    }
}
