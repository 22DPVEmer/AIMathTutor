name: CI/CD Pipeline - Deploy to Railway

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BACKEND: ${{ github.repository }}/mathtutor-backend
  IMAGE_NAME_FRONTEND: ${{ github.repository }}/mathtutor-frontend

jobs:
  # Job 1: Build and Test Backend
  test-backend:
    name: Test Backend (.NET 8)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore MathBackend/MathTutor.sln
      
    - name: Build backend
      run: dotnet build MathBackend/MathTutor.sln --no-restore --configuration Release
      
    - name: Run backend tests
      run: dotnet test MathBackend/MathTutor.Tests --no-build --configuration Release --verbosity normal

  # Job 2: Build and Test Frontend
  test-frontend:
    name: Test Frontend (Vue.js)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: MathFrontend/VueJS-User-Management/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      working-directory: MathFrontend/VueJS-User-Management
      
    - name: Run frontend tests
      run: npm run test:unit
      working-directory: MathFrontend/VueJS-User-Management
      
    - name: Build frontend
      run: npm run build
      working-directory: MathFrontend/VueJS-User-Management
      env:
        VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL || 'https://your-backend-url.railway.app/api' }}

  # Job 3: Build and Push Docker Images
  build-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    if: github.event_name == 'push'
    
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Extract metadata for backend
      id: meta-backend
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Extract metadata for frontend
      id: meta-frontend
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./MathBackend
        file: ./MathBackend/Dockerfile
        push: true
        tags: ${{ steps.meta-backend.outputs.tags }}
        labels: ${{ steps.meta-backend.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./MathFrontend/VueJS-User-Management
        file: ./MathFrontend/VueJS-User-Management/Dockerfile
        push: true
        tags: ${{ steps.meta-frontend.outputs.tags }}
        labels: ${{ steps.meta-frontend.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL || 'https://your-backend-url.railway.app/api' }}

  # Job 4: Deploy to Railway
  deploy:
    name: Deploy to Railway
    runs-on: ubuntu-latest
    needs: [build-images]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Railway CLI
      run: |
        curl -fsSL https://railway.app/install.sh | sh
        echo "$HOME/.railway/bin" >> $GITHUB_PATH
        
    - name: Deploy Backend to Railway
      run: |
        railway login --token ${{ secrets.RAILWAY_TOKEN }}
        railway service deploy --service mathtutor-backend
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        
    - name: Deploy Frontend to Railway
      run: |
        railway service deploy --service mathtutor-frontend
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        
    - name: Get deployment URL
      id: deploy
      run: |
        FRONTEND_URL=$(railway service url --service mathtutor-frontend)
        echo "url=$FRONTEND_URL" >> $GITHUB_OUTPUT
        echo "ðŸš€ Deployed to: $FRONTEND_URL"

  # Job 5: Health Check
  health-check:
    name: Post-Deployment Health Check
    runs-on: ubuntu-latest
    needs: [deploy]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Wait for deployment
      run: sleep 60
      
    - name: Check backend health
      run: |
        curl -f ${{ secrets.BACKEND_URL }}/health || exit 1
        echo "âœ… Backend is healthy"
        
    - name: Check frontend health
      run: |
        curl -f ${{ needs.deploy.outputs.url }} || exit 1
        echo "âœ… Frontend is healthy"
        
    - name: Notify deployment success
      run: |
        echo "ðŸŽ‰ Deployment successful!"
        echo "Frontend: ${{ needs.deploy.outputs.url }}"
        echo "Backend: ${{ secrets.BACKEND_URL }}"
